name: Deploy SAM Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  test-and-validate:
    name: Test and Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'

      - name: Install dependencies
        run: |
          cd src
          npm ci

      - name: Run linting
        run: |
          cd src
          npm run lint

      - name: Run tests
        run: |
          cd src
          npm test
        continue-on-error: true  # Allow pipeline to continue if no tests exist yet

      - name: Setup Python for SAM
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Validate SAM template
        run: sam validate --lint

      - name: Build SAM application
        run: sam build

      - name: Run SAM local tests
        run: |
          # Test the Lambda function locally with sample event
          echo '{}' > test-event.json
          sam local invoke ReportGeneratorFunction --event test-event.json --skip-pull-image || true
        continue-on-error: true  # Local invoke might not work in CI

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: test-and-validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'src/package-lock.json'

      - name: Install dependencies
        run: |
          cd src
          npm ci

      - name: Setup Python for SAM
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          role-session-name: GitHubActionsOIDCSession

      - name: Build SAM application
        run: sam build

      - name: Deploy SAM application
        run: |
          sam deploy \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --stack-name aws-service-report-generator \
            --capabilities CAPABILITY_IAM \
            --resolve-s3 \
            --region us-east-1

      - name: Get Stack Outputs
        id: stack-outputs
        run: |
          FUNCTION_NAME=$(aws cloudformation describe-stacks \
            --stack-name aws-service-report-generator \
            --query 'Stacks[0].Outputs[?OutputKey==`ReportGeneratorFunction`].OutputValue' \
            --output text)
          echo "function-name=$FUNCTION_NAME" >> $GITHUB_OUTPUT

      - name: Deployment Summary
        run: |
          echo "### Deployment Successful :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Stack Name:** aws-service-report-generator" >> $GITHUB_STEP_SUMMARY
          echo "**Function:** ${{ steps.stack-outputs.outputs.function-name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** us-east-1" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deployed at:** $(date -u)" >> $GITHUB_STEP_SUMMARY
